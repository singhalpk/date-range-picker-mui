{"ast":null,"code":"var _jsxFileName = \"/Users/loopin/Desktop/npm/date-range-picker-mui/src/components/date-range-pickers.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useDefaultDates, useUtils, MARKERS } from '../useUtils';\nimport Menu from './menu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DateRangePicker = props => {\n  _s();\n\n  const {\n    open,\n    onChange,\n    initialDateRange,\n    minDate,\n    maxDate,\n    locale\n  } = props;\n  const {\n    date: toDate,\n    isBefore,\n    isAfter,\n    toJsDate,\n    addMonths,\n    isSameMonth,\n    isSameDay,\n    isWithinRange,\n    endOfDay\n  } = useUtils();\n  const defaultDates = useDefaultDates();\n  const today = new Date();\n  const minDateValid = toDate(minDate || defaultDates.minDate);\n  const maxDateValid = toDate(maxDate || defaultDates.maxDate);\n  const [dateRange, setDateRange] = React.useState({ ...initialDateRange\n  });\n  const [hoverDay, setHoverDay] = React.useState();\n\n  const getValidatedMonths = (range, minDate, maxDate) => {\n    const {\n      startDate,\n      endDate\n    } = range;\n\n    if (startDate && endDate) {\n      const newStart = isBefore(toDate(startDate), toDate(minDate)) ? toDate(startDate) : minDate;\n      const newEnd = isAfter(toDate(endDate), toDate(maxDate)) ? toDate(endDate) : maxDate;\n      return [newStart, isSameMonth(newStart, newEnd) ? addMonths(toDate(newStart), 1) : newEnd];\n    }\n\n    return [toDate(startDate), toDate(endDate)];\n  };\n\n  const [intialFirstMonth, initialSecondMonth] = getValidatedMonths(initialDateRange || {}, minDateValid, maxDateValid);\n  const [firstMonth, setFirstMonth] = React.useState(intialFirstMonth || today);\n  const [secondMonth, setSecondMonth] = React.useState(initialSecondMonth || addMonths(toDate(firstMonth), 1));\n  const {\n    startDate,\n    endDate\n  } = dateRange; // handlers\n\n  const setFirstMonthValidated = date => {\n    if (isBefore(date, toDate(secondMonth))) {\n      setFirstMonth(toJsDate(date));\n    }\n  };\n\n  const setSecondMonthValidated = date => {\n    if (isAfter(date, toDate(firstMonth))) {\n      setSecondMonth(toJsDate(date));\n    }\n  };\n\n  const setDateRangeValidated = range => {\n    let {\n      startDate: newStart,\n      endDate: newEnd\n    } = range;\n\n    if (newStart && newEnd) {\n      range.startDate = newStart = isAfter(toDate(newStart), toDate(minDateValid)) ? toDate(newStart) : minDateValid;\n      range.endDate = newEnd = isBefore(toDate(newEnd), toDate(maxDateValid)) ? toDate(newEnd) : maxDateValid;\n      setDateRange(range);\n      onChange({\n        startDate: toJsDate(range.startDate),\n        endDate: toJsDate(endOfDay(range.endDate))\n      });\n      setFirstMonth(newStart);\n      setSecondMonth(isSameMonth(toDate(newStart), toDate(newEnd)) ? addMonths(toDate(newStart), 1) : newEnd);\n    } else {\n      const emptyRange = {};\n      setDateRange(emptyRange);\n      onChange(emptyRange);\n      setFirstMonth(today);\n      setSecondMonth(addMonths(toDate(firstMonth), 1));\n    }\n  };\n\n  const onDayClick = day => {\n    if (startDate && !endDate && !isBefore(toDate(day), toDate(startDate))) {\n      const newRange = {\n        startDate,\n        endDate: day\n      };\n      onChange({\n        startDate: toJsDate(startDate),\n        endDate: toJsDate(endOfDay(day))\n      });\n      setDateRange(newRange);\n    } else {\n      setDateRange({\n        startDate: day,\n        endDate: undefined\n      });\n    }\n\n    setHoverDay(day);\n  };\n\n  const onMonthNavigate = (marker, action) => {\n    if (marker === MARKERS.FIRST_MONTH) {\n      const firstNew = addMonths(toDate(firstMonth), action);\n      setFirstMonth(firstNew);\n      setSecondMonth(firstNew);\n    } else {\n      const secondNew = addMonths(toDate(secondMonth), action);\n\n      if (isBefore(toDate(firstMonth), toDate(secondNew)) || isSameMonth(toDate(firstMonth), toDate(secondNew))) {\n        setSecondMonth(secondNew);\n      }\n    }\n  };\n\n  const onDayHover = date => {\n    if (startDate && !endDate) {\n      if (!hoverDay || !isSameDay(toDate(date), toDate(hoverDay))) {\n        setHoverDay(date);\n      }\n    }\n  }; // helpers\n\n\n  const inHoverRange = day => startDate && !endDate && hoverDay && isAfter(hoverDay, startDate) && isWithinRange(toDate(day), [toDate(startDate), toDate(hoverDay)]);\n\n  const helpers = {\n    inHoverRange\n  };\n  const handlers = {\n    onDayClick,\n    onDayHover,\n    onMonthNavigate\n  };\n  return open ? /*#__PURE__*/_jsxDEV(Menu, {\n    dateRange: dateRange,\n    minDate: minDateValid,\n    maxDate: maxDateValid,\n    firstMonth: firstMonth,\n    secondMonth: secondMonth,\n    setFirstMonth: setFirstMonthValidated,\n    setSecondMonth: setSecondMonthValidated,\n    setDateRange: setDateRangeValidated,\n    helpers: helpers,\n    handlers: handlers,\n    locale: locale\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this) : null;\n};\n\n_s(DateRangePicker, \"Gun1H5+A70TFFICsrP63l9tm/Mo=\", false, function () {\n  return [useUtils, useDefaultDates];\n});\n\n_c = DateRangePicker;\nexport default DateRangePicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateRangePicker\");","map":{"version":3,"names":["React","useDefaultDates","useUtils","MARKERS","Menu","DateRangePicker","props","open","onChange","initialDateRange","minDate","maxDate","locale","date","toDate","isBefore","isAfter","toJsDate","addMonths","isSameMonth","isSameDay","isWithinRange","endOfDay","defaultDates","today","Date","minDateValid","maxDateValid","dateRange","setDateRange","useState","hoverDay","setHoverDay","getValidatedMonths","range","startDate","endDate","newStart","newEnd","intialFirstMonth","initialSecondMonth","firstMonth","setFirstMonth","secondMonth","setSecondMonth","setFirstMonthValidated","setSecondMonthValidated","setDateRangeValidated","emptyRange","onDayClick","day","newRange","undefined","onMonthNavigate","marker","action","FIRST_MONTH","firstNew","secondNew","onDayHover","inHoverRange","helpers","handlers"],"sources":["/Users/loopin/Desktop/npm/date-range-picker-mui/src/components/date-range-pickers.js"],"sourcesContent":["import * as React from 'react';\nimport { useDefaultDates, useUtils, MARKERS } from '../useUtils';\nimport Menu from './menu';\n\nconst DateRangePicker = props => {\n  const { open, onChange, initialDateRange, minDate, maxDate, locale } = props;\n  const { date: toDate, isBefore, isAfter, toJsDate, addMonths, isSameMonth, isSameDay, isWithinRange, endOfDay } = useUtils();\n  const defaultDates = useDefaultDates();\n  const today = new Date();\n  const minDateValid = toDate(minDate || defaultDates.minDate);\n  const maxDateValid = toDate(maxDate || defaultDates.maxDate);\n  const [dateRange, setDateRange] = React.useState({ ...initialDateRange });\n  const [hoverDay, setHoverDay] = React.useState();\n\n  const getValidatedMonths = (range, minDate, maxDate) => {\n    const { startDate, endDate } = range;\n    if (startDate && endDate) {\n      const newStart = isBefore(toDate(startDate), toDate(minDate)) ? toDate(startDate) : minDate;\n      const newEnd = isAfter(toDate(endDate), toDate(maxDate)) ? toDate(endDate) : maxDate;\n\n      return [newStart, isSameMonth(newStart, newEnd) ? addMonths(toDate(newStart), 1) : newEnd];\n    }\n    return [toDate(startDate), toDate(endDate)];\n  };\n  const [intialFirstMonth, initialSecondMonth] = getValidatedMonths(initialDateRange || {}, minDateValid, maxDateValid);\n\n  const [firstMonth, setFirstMonth] = React.useState(intialFirstMonth || today);\n  const [secondMonth, setSecondMonth] = React.useState(initialSecondMonth || addMonths(toDate(firstMonth), 1));\n\n  const { startDate, endDate } = dateRange;\n\n  // handlers\n  const setFirstMonthValidated = date => {\n    if (isBefore(date, toDate(secondMonth))) {\n      setFirstMonth(toJsDate(date));\n    }\n  };\n\n  const setSecondMonthValidated = date => {\n    if (isAfter(date, toDate(firstMonth))) {\n      setSecondMonth(toJsDate(date));\n    }\n  };\n\n  const setDateRangeValidated = range => {\n    let { startDate: newStart, endDate: newEnd } = range;\n\n    if (newStart && newEnd) {\n      range.startDate = newStart = isAfter(toDate(newStart), toDate(minDateValid)) ? toDate(newStart) : minDateValid;\n      range.endDate = newEnd = isBefore(toDate(newEnd), toDate(maxDateValid)) ? toDate(newEnd) : maxDateValid;\n\n      setDateRange(range);\n      onChange({ startDate: toJsDate(range.startDate), endDate: toJsDate(endOfDay(range.endDate)) });\n\n      setFirstMonth(newStart);\n      setSecondMonth(isSameMonth(toDate(newStart), toDate(newEnd)) ? addMonths(toDate(newStart), 1) : newEnd);\n    } else {\n      const emptyRange = {};\n\n      setDateRange(emptyRange);\n      onChange(emptyRange);\n\n      setFirstMonth(today);\n      setSecondMonth(addMonths(toDate(firstMonth), 1));\n    }\n  };\n\n  const onDayClick = day => {\n    if (startDate && !endDate && !isBefore(toDate(day), toDate(startDate))) {\n      const newRange = { startDate, endDate: day };\n      onChange({ startDate: toJsDate(startDate), endDate: toJsDate(endOfDay(day)) });\n      setDateRange(newRange);\n    } else {\n      setDateRange({ startDate: day, endDate: undefined });\n    }\n    setHoverDay(day);\n  };\n\n  const onMonthNavigate = (marker, action) => {\n    if (marker === MARKERS.FIRST_MONTH) {\n      const firstNew = addMonths(toDate(firstMonth), action);\n      setFirstMonth(firstNew);\n      setSecondMonth(firstNew);\n    } else {\n      const secondNew = addMonths(toDate(secondMonth), action);\n      if (isBefore(toDate(firstMonth), toDate(secondNew)) || isSameMonth(toDate(firstMonth), toDate(secondNew))) {\n        setSecondMonth(secondNew);\n      }\n    }\n  };\n\n  const onDayHover = date => {\n    if (startDate && !endDate) {\n      if (!hoverDay || !isSameDay(toDate(date), toDate(hoverDay))) {\n        setHoverDay(date);\n      }\n    }\n  };\n\n  // helpers\n  const inHoverRange = day =>\n    startDate && !endDate && hoverDay && isAfter(hoverDay, startDate) && isWithinRange(toDate(day), [toDate(startDate), toDate(hoverDay)]);\n\n  const helpers = {\n    inHoverRange,\n  };\n\n  const handlers = {\n    onDayClick,\n    onDayHover,\n    onMonthNavigate,\n  };\n\n  return open ? (\n    <Menu\n      dateRange={dateRange}\n      minDate={minDateValid}\n      maxDate={maxDateValid}\n      firstMonth={firstMonth}\n      secondMonth={secondMonth}\n      setFirstMonth={setFirstMonthValidated}\n      setSecondMonth={setSecondMonthValidated}\n      setDateRange={setDateRangeValidated}\n      helpers={helpers}\n      handlers={handlers}\n      locale={locale}\n    />\n  ) : null;\n};\n\nexport default DateRangePicker;\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,OAApC,QAAmD,aAAnD;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;EAAA;;EAC/B,MAAM;IAAEC,IAAF;IAAQC,QAAR;IAAkBC,gBAAlB;IAAoCC,OAApC;IAA6CC,OAA7C;IAAsDC;EAAtD,IAAiEN,KAAvE;EACA,MAAM;IAAEO,IAAI,EAAEC,MAAR;IAAgBC,QAAhB;IAA0BC,OAA1B;IAAmCC,QAAnC;IAA6CC,SAA7C;IAAwDC,WAAxD;IAAqEC,SAArE;IAAgFC,aAAhF;IAA+FC;EAA/F,IAA4GpB,QAAQ,EAA1H;EACA,MAAMqB,YAAY,GAAGtB,eAAe,EAApC;EACA,MAAMuB,KAAK,GAAG,IAAIC,IAAJ,EAAd;EACA,MAAMC,YAAY,GAAGZ,MAAM,CAACJ,OAAO,IAAIa,YAAY,CAACb,OAAzB,CAA3B;EACA,MAAMiB,YAAY,GAAGb,MAAM,CAACH,OAAO,IAAIY,YAAY,CAACZ,OAAzB,CAA3B;EACA,MAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4B7B,KAAK,CAAC8B,QAAN,CAAe,EAAE,GAAGrB;EAAL,CAAf,CAAlC;EACA,MAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BhC,KAAK,CAAC8B,QAAN,EAAhC;;EAEA,MAAMG,kBAAkB,GAAG,CAACC,KAAD,EAAQxB,OAAR,EAAiBC,OAAjB,KAA6B;IACtD,MAAM;MAAEwB,SAAF;MAAaC;IAAb,IAAyBF,KAA/B;;IACA,IAAIC,SAAS,IAAIC,OAAjB,EAA0B;MACxB,MAAMC,QAAQ,GAAGtB,QAAQ,CAACD,MAAM,CAACqB,SAAD,CAAP,EAAoBrB,MAAM,CAACJ,OAAD,CAA1B,CAAR,GAA+CI,MAAM,CAACqB,SAAD,CAArD,GAAmEzB,OAApF;MACA,MAAM4B,MAAM,GAAGtB,OAAO,CAACF,MAAM,CAACsB,OAAD,CAAP,EAAkBtB,MAAM,CAACH,OAAD,CAAxB,CAAP,GAA4CG,MAAM,CAACsB,OAAD,CAAlD,GAA8DzB,OAA7E;MAEA,OAAO,CAAC0B,QAAD,EAAWlB,WAAW,CAACkB,QAAD,EAAWC,MAAX,CAAX,GAAgCpB,SAAS,CAACJ,MAAM,CAACuB,QAAD,CAAP,EAAmB,CAAnB,CAAzC,GAAiEC,MAA5E,CAAP;IACD;;IACD,OAAO,CAACxB,MAAM,CAACqB,SAAD,CAAP,EAAoBrB,MAAM,CAACsB,OAAD,CAA1B,CAAP;EACD,CATD;;EAUA,MAAM,CAACG,gBAAD,EAAmBC,kBAAnB,IAAyCP,kBAAkB,CAACxB,gBAAgB,IAAI,EAArB,EAAyBiB,YAAzB,EAAuCC,YAAvC,CAAjE;EAEA,MAAM,CAACc,UAAD,EAAaC,aAAb,IAA8B1C,KAAK,CAAC8B,QAAN,CAAeS,gBAAgB,IAAIf,KAAnC,CAApC;EACA,MAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgC5C,KAAK,CAAC8B,QAAN,CAAeU,kBAAkB,IAAItB,SAAS,CAACJ,MAAM,CAAC2B,UAAD,CAAP,EAAqB,CAArB,CAA9C,CAAtC;EAEA,MAAM;IAAEN,SAAF;IAAaC;EAAb,IAAyBR,SAA/B,CAzB+B,CA2B/B;;EACA,MAAMiB,sBAAsB,GAAGhC,IAAI,IAAI;IACrC,IAAIE,QAAQ,CAACF,IAAD,EAAOC,MAAM,CAAC6B,WAAD,CAAb,CAAZ,EAAyC;MACvCD,aAAa,CAACzB,QAAQ,CAACJ,IAAD,CAAT,CAAb;IACD;EACF,CAJD;;EAMA,MAAMiC,uBAAuB,GAAGjC,IAAI,IAAI;IACtC,IAAIG,OAAO,CAACH,IAAD,EAAOC,MAAM,CAAC2B,UAAD,CAAb,CAAX,EAAuC;MACrCG,cAAc,CAAC3B,QAAQ,CAACJ,IAAD,CAAT,CAAd;IACD;EACF,CAJD;;EAMA,MAAMkC,qBAAqB,GAAGb,KAAK,IAAI;IACrC,IAAI;MAAEC,SAAS,EAAEE,QAAb;MAAuBD,OAAO,EAAEE;IAAhC,IAA2CJ,KAA/C;;IAEA,IAAIG,QAAQ,IAAIC,MAAhB,EAAwB;MACtBJ,KAAK,CAACC,SAAN,GAAkBE,QAAQ,GAAGrB,OAAO,CAACF,MAAM,CAACuB,QAAD,CAAP,EAAmBvB,MAAM,CAACY,YAAD,CAAzB,CAAP,GAAkDZ,MAAM,CAACuB,QAAD,CAAxD,GAAqEX,YAAlG;MACAQ,KAAK,CAACE,OAAN,GAAgBE,MAAM,GAAGvB,QAAQ,CAACD,MAAM,CAACwB,MAAD,CAAP,EAAiBxB,MAAM,CAACa,YAAD,CAAvB,CAAR,GAAiDb,MAAM,CAACwB,MAAD,CAAvD,GAAkEX,YAA3F;MAEAE,YAAY,CAACK,KAAD,CAAZ;MACA1B,QAAQ,CAAC;QAAE2B,SAAS,EAAElB,QAAQ,CAACiB,KAAK,CAACC,SAAP,CAArB;QAAwCC,OAAO,EAAEnB,QAAQ,CAACK,QAAQ,CAACY,KAAK,CAACE,OAAP,CAAT;MAAzD,CAAD,CAAR;MAEAM,aAAa,CAACL,QAAD,CAAb;MACAO,cAAc,CAACzB,WAAW,CAACL,MAAM,CAACuB,QAAD,CAAP,EAAmBvB,MAAM,CAACwB,MAAD,CAAzB,CAAX,GAAgDpB,SAAS,CAACJ,MAAM,CAACuB,QAAD,CAAP,EAAmB,CAAnB,CAAzD,GAAiFC,MAAlF,CAAd;IACD,CATD,MASO;MACL,MAAMU,UAAU,GAAG,EAAnB;MAEAnB,YAAY,CAACmB,UAAD,CAAZ;MACAxC,QAAQ,CAACwC,UAAD,CAAR;MAEAN,aAAa,CAAClB,KAAD,CAAb;MACAoB,cAAc,CAAC1B,SAAS,CAACJ,MAAM,CAAC2B,UAAD,CAAP,EAAqB,CAArB,CAAV,CAAd;IACD;EACF,CArBD;;EAuBA,MAAMQ,UAAU,GAAGC,GAAG,IAAI;IACxB,IAAIf,SAAS,IAAI,CAACC,OAAd,IAAyB,CAACrB,QAAQ,CAACD,MAAM,CAACoC,GAAD,CAAP,EAAcpC,MAAM,CAACqB,SAAD,CAApB,CAAtC,EAAwE;MACtE,MAAMgB,QAAQ,GAAG;QAAEhB,SAAF;QAAaC,OAAO,EAAEc;MAAtB,CAAjB;MACA1C,QAAQ,CAAC;QAAE2B,SAAS,EAAElB,QAAQ,CAACkB,SAAD,CAArB;QAAkCC,OAAO,EAAEnB,QAAQ,CAACK,QAAQ,CAAC4B,GAAD,CAAT;MAAnD,CAAD,CAAR;MACArB,YAAY,CAACsB,QAAD,CAAZ;IACD,CAJD,MAIO;MACLtB,YAAY,CAAC;QAAEM,SAAS,EAAEe,GAAb;QAAkBd,OAAO,EAAEgB;MAA3B,CAAD,CAAZ;IACD;;IACDpB,WAAW,CAACkB,GAAD,CAAX;EACD,CATD;;EAWA,MAAMG,eAAe,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;IAC1C,IAAID,MAAM,KAAKnD,OAAO,CAACqD,WAAvB,EAAoC;MAClC,MAAMC,QAAQ,GAAGvC,SAAS,CAACJ,MAAM,CAAC2B,UAAD,CAAP,EAAqBc,MAArB,CAA1B;MACAb,aAAa,CAACe,QAAD,CAAb;MACAb,cAAc,CAACa,QAAD,CAAd;IACD,CAJD,MAIO;MACL,MAAMC,SAAS,GAAGxC,SAAS,CAACJ,MAAM,CAAC6B,WAAD,CAAP,EAAsBY,MAAtB,CAA3B;;MACA,IAAIxC,QAAQ,CAACD,MAAM,CAAC2B,UAAD,CAAP,EAAqB3B,MAAM,CAAC4C,SAAD,CAA3B,CAAR,IAAmDvC,WAAW,CAACL,MAAM,CAAC2B,UAAD,CAAP,EAAqB3B,MAAM,CAAC4C,SAAD,CAA3B,CAAlE,EAA2G;QACzGd,cAAc,CAACc,SAAD,CAAd;MACD;IACF;EACF,CAXD;;EAaA,MAAMC,UAAU,GAAG9C,IAAI,IAAI;IACzB,IAAIsB,SAAS,IAAI,CAACC,OAAlB,EAA2B;MACzB,IAAI,CAACL,QAAD,IAAa,CAACX,SAAS,CAACN,MAAM,CAACD,IAAD,CAAP,EAAeC,MAAM,CAACiB,QAAD,CAArB,CAA3B,EAA6D;QAC3DC,WAAW,CAACnB,IAAD,CAAX;MACD;IACF;EACF,CAND,CAvF+B,CA+F/B;;;EACA,MAAM+C,YAAY,GAAGV,GAAG,IACtBf,SAAS,IAAI,CAACC,OAAd,IAAyBL,QAAzB,IAAqCf,OAAO,CAACe,QAAD,EAAWI,SAAX,CAA5C,IAAqEd,aAAa,CAACP,MAAM,CAACoC,GAAD,CAAP,EAAc,CAACpC,MAAM,CAACqB,SAAD,CAAP,EAAoBrB,MAAM,CAACiB,QAAD,CAA1B,CAAd,CADpF;;EAGA,MAAM8B,OAAO,GAAG;IACdD;EADc,CAAhB;EAIA,MAAME,QAAQ,GAAG;IACfb,UADe;IAEfU,UAFe;IAGfN;EAHe,CAAjB;EAMA,OAAO9C,IAAI,gBACT,QAAC,IAAD;IACE,SAAS,EAAEqB,SADb;IAEE,OAAO,EAAEF,YAFX;IAGE,OAAO,EAAEC,YAHX;IAIE,UAAU,EAAEc,UAJd;IAKE,WAAW,EAAEE,WALf;IAME,aAAa,EAAEE,sBANjB;IAOE,cAAc,EAAEC,uBAPlB;IAQE,YAAY,EAAEC,qBARhB;IASE,OAAO,EAAEc,OATX;IAUE,QAAQ,EAAEC,QAVZ;IAWE,MAAM,EAAElD;EAXV;IAAA;IAAA;IAAA;EAAA,QADS,GAcP,IAdJ;AAeD,CA5HD;;GAAMP,e;UAE8GH,Q,EAC7FD,e;;;KAHjBI,e;AA8HN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}